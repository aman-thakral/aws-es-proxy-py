#!/usr/bin/python3

import app
import config
import logging
from os import environ
from argparse import ArgumentParser
from boto3 import session


def _get_args():
    parser = ArgumentParser()
    required = parser.add_argument_group("required arguments")
    parser.add_argument("-r", "--region", metavar="\b", default="eu-west-1",
                        help="AWS service region. Default is 'eu-west-1'")
    required.add_argument("-e", "--endpoint", metavar="\b", required=True,
                          help="AWS service domain endpoint.")
    return parser.parse_args()


def main():
    logging.basicConfig(level=logging.INFO)
    logging.info("Proxy started")

    args = _get_args()
    config.aws_credentials = session.Session().get_credentials()
    access_key = environ.get("AWS_ACCESS_KEY_ID")
    secret_key = environ.get("AWS_SECRET_ACCESS_KEY")

    if config.aws_credentials:
        logging.info("Successfully loaded AWS credentials from %s" %
                     config.aws_credentials.method)
    elif access_key and secret_key:
        config.aws_credentials = session.Session(
            aws_access_key_id=access_key,
            aws_secret_access_key=secret_key
        ).get_credentials()
        logging.info(
            "Successfully loaded AWS credentials from environment variables"
        )
    else:
        logging.error("No credential found")
        exit(1)

    config.aws_region = args.region
    config.aws_endpoint = args.endpoint

    app.start()


if __name__ == "__main__":
    main()
